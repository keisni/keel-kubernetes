---
# Source: keel-helm/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: keel-secret
  namespace: keel-cn
type: kubernetes.io/tls
data:
  tls.crt:     LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlHaWpDQ0JYS2dBd0lCQWdJSkFLYThpZWNhTU02bE1BMEdDU3FHU0liM0RRRUJDd1VBTUlHME1Rc3dDUVlEDQpWUVFHRXdKVlV6RVFNQTRHQTFVRUNCTUhRWEpwZW05dVlURVRNQkVHQTFVRUJ4TUtVMk52ZEhSelpHRnNaVEVhDQpNQmdHQTFVRUNoTVJSMjlFWVdSa2VTNWpiMjBzSUVsdVl5NHhMVEFyQmdOVkJBc1RKR2gwZEhBNkx5OWpaWEowDQpjeTVuYjJSaFpHUjVMbU52YlM5eVpYQnZjMmwwYjNKNUx6RXpNREVHQTFVRUF4TXFSMjhnUkdGa1pIa2dVMlZqDQpkWEpsSUVObGNuUnBabWxqWVhSbElFRjFkR2h2Y21sMGVTQXRJRWN5TUI0WERUSXhNVEF4TURBM01UazFOMW9YDQpEVEl5TVRBek1UQTRNalV6T0Zvd0Z6RVZNQk1HQTFVRUF3d01LaTU2ZFd4dmJtY3VZMjl0TUlJQklqQU5CZ2txDQpoa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXRBVC83M092N2F2dGhTbzFjZDl6Uk4rMGlWYXdqQ3Y2DQppTUd1MmhhbXVFeUVBYTFCbjR5R2FwakE4NnJrKzBrcDI4MytWVnJDOEptQmpxRlFPaFcwTHd2aWFGUnd0L3pNDQo5bVFmVDZxNWFtLzVxRFN5cG1HbnZzMjhSR0o4TlNpUURuL1lCWHdEdUxScSs3Z1lrQWRHL3VVbzhEbldRVnZGDQpuNkQzYlZwK0dJTDNHd1ArNDAydUhibk9IcFIzYjNhOTNPUHh0Q2dNb0Y3bktTUGhBSGcwR0QvYlkzbU8yWVdDDQo2QW1pQTB3ZXpGK2JONTFJN255dTBmaDJTZExEODEyOEw5S2hySjJMSjQwRmNRc2NBUktsUkFMT2NhME9xSmZqDQpUSXVRMmhWcGk5WGl3RFlhNEZXUXhHR3JCQUh0TVZ6QVp4YncveUNYaEQ5RlJyeWlKMXYxeXdJREFRQUJvNElEDQpPVENDQXpVd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIDQpBd0l3RGdZRFZSMFBBUUgvQkFRREFnV2dNRGdHQTFVZEh3UXhNQzh3TGFBcm9DbUdKMmgwZEhBNkx5OWpjbXd1DQpaMjlrWVdSa2VTNWpiMjB2WjJScFp6SnpNUzB6TXpZMExtTnliREJkQmdOVkhTQUVWakJVTUVnR0MyQ0dTQUdHDQovVzBCQnhjQk1Ea3dOd1lJS3dZQkJRVUhBZ0VXSzJoMGRIQTZMeTlqWlhKMGFXWnBZMkYwWlhNdVoyOWtZV1JrDQplUzVqYjIwdmNtVndiM05wZEc5eWVTOHdDQVlHWjRFTUFRSUJNSFlHQ0NzR0FRVUZCd0VCQkdvd2FEQWtCZ2dyDQpCZ0VGQlFjd0FZWVlhSFIwY0RvdkwyOWpjM0F1WjI5a1lXUmtlUzVqYjIwdk1FQUdDQ3NHQVFVRkJ6QUNoalJvDQpkSFJ3T2k4dlkyVnlkR2xtYVdOaGRHVnpMbWR2WkdGa1pIa3VZMjl0TDNKbGNHOXphWFJ2Y25rdloyUnBaekl1DQpZM0owTUI4R0ExVWRJd1FZTUJhQUZFREN2U2VPekRTRE1LSXoxL3Rzcy9DMExJRE9NQ01HQTFVZEVRUWNNQnFDDQpEQ291ZW5Wc2IyNW5MbU52YllJS2VuVnNiMjVuTG1OdmJUQWRCZ05WSFE0RUZnUVUzVDJqZXZGRG5EYmtzWldBDQp0L0lHczM2bGw3SXdnZ0YrQmdvckJnRUVBZFo1QWdRQ0JJSUJiZ1NDQVdvQmFBQjJBQ2w1dnZDZU9Ua2g4Rlp6DQpuMk9sZCtXK1YzMmNZQXI0K1UxZEpsd2xYY2VFQUFBQmZHa1RIdDhBQUFRREFFY3dSUUloQU1ybEw5ZVc3R0ZMDQpidVF3bDhBZmlOcnYvN0pDV09JQ1cwYjJKeVpVd1NzU0FpQkZnRVhuS3ZVWUlzRjBRUlVZRFJNNk5kVGVWcTBUDQpPU3R2RnluNDVsM0Fsd0IyQU4rbFhxdG9nazhmYkszdXVGOU9QbHJxemFJU3BHcGVqanNTd0NCRVhDcHpBQUFCDQpmR2tUSVBJQUFBUURBRWN3UlFJZ05WSGdTNkhDUUtJTzREMFNRSWlxekdsMGVHSkkxaTBxRjQ3VEhxUFFWZ01DDQpJUUMybDJ3ZlFPWS9YMmo2cUJrcUVJVUFkN3JXTzlKNDZXK0JTdHQ0d1pqeEFnQjJBRUhJeXJIZklrWktFTWFoDQpPZ2xDaDE1T01Zc2JBK3ZyUzhkbzhKQmlsZ2IyQUFBQmZHa1RJVnNBQUFRREFFY3dSUUloQVBFcVkvVTJ6YjZRDQp4WWd2R3NqMWRRaUdqUnUxcGR0Z1A4OTdVaEs1Z0pOQ0FpQlZYZklWNzFZeG9iRWtEd1d6WVVjY0o3Qnowa2lsDQpSWXRNM0ZuM2ZnZFFEakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBSDRTNk9qR25BNUxtOGRmRGVvUmxlR0EyDQoyZFZqR0FZdnY1SmVPaXZVS0NkM1JlZnk5MmFrMXdDUTlJRFdGOWZ6SjVPL0o4VkJIc2pZdEdVN0pvZXg4NFA0DQp3SjFvYlZCbDM5VmhmRHNZMFljU0hBUkM0NEN6T01jcWkxcDQyR3BNajJ3dDNia2dZMXg2cmRqOG5HMzk0U0cyDQpFa0Ewd0pPa09Ec3RnL2R0UlBWeFJKT1F5VHZxbWVPRnVHTEJaSlhpWDEvV1RIRjBxMUpIbTNWRm94RGliekFFDQo2R01BNnFjMGtyVmFYT1c4cERSZ2lncGpyNlRseWltOXVwNFRCSXU0N0ZDUWVwa3Nna1ozdlZyck5mdXFiSEhqDQpqb3JSOUFac2RvaDlDeklNdVdSVkNUaE90Q0xHMitKcXJiZ1E0T0x5YmN6VmlnTDJWc1BESHZ4WkRzdmZRQT09DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0NCk1JSUUwRENDQTdpZ0F3SUJBZ0lCQnpBTkJna3Foa2lHOXcwQkFRc0ZBRENCZ3pFTE1Ba0dBMVVFQmhNQ1ZWTXgNCkVEQU9CZ05WQkFnVEIwRnlhWHB2Ym1FeEV6QVJCZ05WQkFjVENsTmpiM1IwYzJSaGJHVXhHakFZQmdOVkJBb1QNCkVVZHZSR0ZrWkhrdVkyOXRMQ0JKYm1NdU1URXdMd1lEVlFRREV5aEhieUJFWVdSa2VTQlNiMjkwSUVObGNuUnANClptbGpZWFJsSUVGMWRHaHZjbWwwZVNBdElFY3lNQjRYRFRFeE1EVXdNekEzTURBd01Gb1hEVE14TURVd016QTMNCk1EQXdNRm93Z2JReEN6QUpCZ05WQkFZVEFsVlRNUkF3RGdZRFZRUUlFd2RCY21sNmIyNWhNUk13RVFZRFZRUUgNCkV3cFRZMjkwZEhOa1lXeGxNUm93R0FZRFZRUUtFeEZIYjBSaFpHUjVMbU52YlN3Z1NXNWpMakV0TUNzR0ExVUUNCkN4TWthSFIwY0RvdkwyTmxjblJ6TG1kdlpHRmtaSGt1WTI5dEwzSmxjRzl6YVhSdmNua3ZNVE13TVFZRFZRUUQNCkV5cEhieUJFWVdSa2VTQlRaV04xY21VZ1EyVnlkR2xtYVdOaGRHVWdRWFYwYUc5eWFYUjVJQzBnUnpJd2dnRWkNCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzU0TXNRMUs5MnZkU1RZdXN3WkxpQkNHekQNCkJObGlGNDR2L3o1bHo0L09ZdVk4VWh6YUZrVkxWYXQ0YTJPRFlwRE9EMmxzbWNnYUZJdE16RVV6Nm9qY25xT3YNCksvNkFZWjE1VjhUUEx2US9NRHhkUi95YUZyekRONVpCVVk0UlMxVDRLTDdRakw3d01EZ2U4N0FtK0daSFkyM2UNCmNTWkhqemhIVTlGR0hiVGozQURxUmF5OXZISFpxbThBMjl2Tk1EcDVUMTlNUi9nZDcxdkN4SjFnTzdHeVE1SFkNCnBETk82clBXSjArdEpZcWx4dlRWMEthdWRBVmtWNGkxUkZYVUxTbzZQdmk0dmVreUNnS1VaTVFXT2xEeFNxN24NCmVUT3ZEQ0FIZitqZkJEbkNhUUpzWTFMNmQ4RWJ5SFNIeUxtVEdGQlVOVXRwVHJ3NzAwa3VIOXpCMGxMN0FnTUINCkFBR2pnZ0VhTUlJQkZqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQi93UUVBd0lCQmpBZEJnTlYNCkhRNEVGZ1FVUU1LOUo0N01OSU13b2pQWCsyeXo4TFFzZ000d0h3WURWUjBqQkJnd0ZvQVVPcHFGQnhCbktMYnYNCjlyMEZRVzRnd1pUYUQ5NHdOQVlJS3dZQkJRVUhBUUVFS0RBbU1DUUdDQ3NHQVFVRkJ6QUJoaGhvZEhSd09pOHYNCmIyTnpjQzVuYjJSaFpHUjVMbU52YlM4d05RWURWUjBmQkM0d0xEQXFvQ2lnSm9Za2FIUjBjRG92TDJOeWJDNW4NCmIyUmhaR1I1TG1OdmJTOW5aSEp2YjNRdFp6SXVZM0pzTUVZR0ExVWRJQVEvTUQwd093WUVWUjBnQURBek1ERUcNCkNDc0dBUVVGQndJQkZpVm9kSFJ3Y3pvdkwyTmxjblJ6TG1kdlpHRmtaSGt1WTI5dEwzSmxjRzl6YVhSdmNua3YNCk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUlmbXlURU1nNHVKYXBrRXYvb1Y5UEJPOXNQcHlJQnNsUWo2WnoNCjkxY3hHNzY4NUMvYitMclRXK0MwNStaNVlnNE1vdGRxWTNNeHRmV29TS1E3Q0MyaVhaRFh0SHdsVHhGV01NUzINClJKMTdMSjNsWHVidkRHR3F2K1FxRys2RW5yaURmY0ZEemtTbkUzQU5rUi8weUJPdGcyRFoySEtvY3lRZXRhd2kNCkRzb1hpV0pZUkJ1cmlTVUJBQS9OeEJ0aTIxRzAwdzlSS3B2MHZIUDhkczQycE0zWjJDenFycHYxS3JLUTBVMTENCkdJby9pa0dRSTMxYlMvNmtBMWliUnJMRFlHQ0QrSDFRUWM3Q29aRER1KzhDTDlJVlZPNUVGZGtLcnFlS00rMngNCkxYWTJKdHdFNjUvM1lSOFYzSWR2N2thV0tLMmhKbjBLQ2FjdUJLT052UGk4QkRBQg0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlFZlRDQ0EyV2dBd0lCQWdJREcrY1ZNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1HTXhDekFKQmdOVkJBWVRBbFZUDQpNU0V3SHdZRFZRUUtFeGhVYUdVZ1IyOGdSR0ZrWkhrZ1IzSnZkWEFzSUVsdVl5NHhNVEF2QmdOVkJBc1RLRWR2DQpJRVJoWkdSNUlFTnNZWE56SURJZ1EyVnlkR2xtYVdOaGRHbHZiaUJCZFhSb2IzSnBkSGt3SGhjTk1UUXdNVEF4DQpNRGN3TURBd1doY05NekV3TlRNd01EY3dNREF3V2pDQmd6RUxNQWtHQTFVRUJoTUNWVk14RURBT0JnTlZCQWdUDQpCMEZ5YVhwdmJtRXhFekFSQmdOVkJBY1RDbE5qYjNSMGMyUmhiR1V4R2pBWUJnTlZCQW9URVVkdlJHRmtaSGt1DQpZMjl0TENCSmJtTXVNVEV3THdZRFZRUURFeWhIYnlCRVlXUmtlU0JTYjI5MElFTmxjblJwWm1sallYUmxJRUYxDQpkR2h2Y21sMGVTQXRJRWN5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF2M0ZpDQpDUEg2V1RUM0c4a1lvL2VBU1ZqcElvTVRwc1VnUXdFN2hQSG1oVW1mSityMmhCdE9vTFRiY0pqSE1nR3hCVDRIDQpUdTcwK2s4dldUQWk1NnNaVm12aWdBZjg4eFoxZ0RsUmUrWDVOYlowVHFtTmdoUGt0aitwQTRQNm9yNktGV3AvDQozZ3ZEdGhrVUJjcnF3NmdFbER0R2ZESU44d0JtSXNpTmFXMDJqQkVZdDlPeUhHQzBPUG9Dak03VDNVWUgzZ28rDQo2MTE4eUh6N3NDdFRwSkppYVZFbEJXRWFSSUdNTEtsRGxpUGZyRHFCbWc0cHhSeXA2VjBldHA2ZU1BbzV6dkdJDQpnUHRMWGN3eTdJVmlReVUwQWxZbkFaRzBPM0FxUDI2eDZKeUlBWDJmMVBuYlUyMWduYjhzNTFpcnVGOUcvTTdFDQpHd004Q2V0Sk1WeHBSclBnUndJREFRQUJvNElCRnpDQ0FSTXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU9CZ05WDQpIUThCQWY4RUJBTUNBUVl3SFFZRFZSME9CQllFRkRxYWhRY1FaeWkyNy9hOUJVRnVJTUdVMmcvZU1COEdBMVVkDQpJd1FZTUJhQUZOTEVzTktSMUV3UmNiTmh5ejJoL3Qyb2F0VGpNRFFHQ0NzR0FRVUZCd0VCQkNnd0pqQWtCZ2dyDQpCZ0VGQlFjd0FZWVlhSFIwY0RvdkwyOWpjM0F1WjI5a1lXUmtlUzVqYjIwdk1ESUdBMVVkSHdRck1Da3dKNkFsDQpvQ09HSVdoMGRIQTZMeTlqY213dVoyOWtZV1JrZVM1amIyMHZaMlJ5YjI5MExtTnliREJHQmdOVkhTQUVQekE5DQpNRHNHQkZVZElBQXdNekF4QmdnckJnRUZCUWNDQVJZbGFIUjBjSE02THk5alpYSjBjeTVuYjJSaFpHUjVMbU52DQpiUzl5WlhCdmMybDBiM0o1THpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVdRdFR2WktHRWFja2UrMWJNYzhkDQpIMnh3eGJodXZrNjc5cjZYVU9Fd2Y3b29YR0tVd3VOK00vZjdRbmFGMjVVY2pDSllkUWtNaUdWbk9Rb1dDY1dnDQpPSmVreFNPVFA3UVlwZ0VHUkpIanAya250Rm9sZnpxM01zM2RoUDhxT0NrenBOMW5zb1grb1lnZ0hGQ0p5TndxDQo5a0lETjB6bWlOL1ZyeVR5c2NQZnpMWHM0SmxldDBsVUlEeVVHQXpISEZJWVNhUnQ0Yk5ZQzhuWTdObXVIREtPDQpLSEFONHY2bUY1NkVENzFYY0xOYTZSK2dobE83NzN6L2FRdmdTTU8za3d2SUNsVEVyRjBVWnpkc3lxVXZNUWczDQpxbTV2akx5YjRsZGRKSUd2bDVlY2hLMXNyRGRNWnZOaGtSRWc1TDR3bjNxa0tRbXc0VFJmWkhjWVFGSGZqRENtDQpydz09DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0NCk1JSUVBRENDQXVpZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRVUZBREJqTVFzd0NRWURWUVFHRXdKVlV6RWgNCk1COEdBMVVFQ2hNWVZHaGxJRWR2SUVSaFpHUjVJRWR5YjNWd0xDQkpibU11TVRFd0x3WURWUVFMRXloSGJ5QkUNCllXUmtlU0JEYkdGemN5QXlJRU5sY25ScFptbGpZWFJwYjI0Z1FYVjBhRzl5YVhSNU1CNFhEVEEwTURZeU9URTMNCk1EWXlNRm9YRFRNME1EWXlPVEUzTURZeU1Gb3dZekVMTUFrR0ExVUVCaE1DVlZNeElUQWZCZ05WQkFvVEdGUm8NClpTQkhieUJFWVdSa2VTQkhjbTkxY0N3Z1NXNWpMakV4TUM4R0ExVUVDeE1vUjI4Z1JHRmtaSGtnUTJ4aGMzTWcNCk1pQkRaWEowYVdacFkyRjBhVzl1SUVGMWRHaHZjbWwwZVRDQ0FTQXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRU4NCkFEQ0NBUWdDZ2dFQkFONmQxK3BYR0VtaFcrdlhYMGlHNnI3ZC8rVHZaeHowWldpelYzR2dYbmU3N1p0SjZYQ0ENClBWWVlZd2h2MnZMTTBEOS9BbFFpVkJEWXNvSFV3SFU5UzMvSGQ4TStlS3NhQTdVZ2F5OXFLN0hGaUg3RXV4NncNCndkaEZKMitxTjFqM2h5YlgyQzMycVJlM0gzSTJUcVlYUDJXWWt0c3FibDJpL29qZ0M5NS81WTBWNGV2TE90WGkNCkVxSVRMZGlPcjE4U1BhQUlCUWkyWEtWbE9BUkZtUjZqWUdCMHhVR2xjbUliWXNVZmIxOGFRcjRDVVdXb3JpTVkNCmF2eDRBNmxOZjRERCtxdGEvS0ZBcE1vWkZ2Nnl5TzllY3czdWQ3MmE5bm1ZdkxFSFo2SVZEZDJnV01aRWV3bysNCllpaGZ1a0VIVTFqUEVYNDRkTVg0LzdWcGtJK0VkT3FYRzY4Q0FRT2pnY0F3Z2Iwd0hRWURWUjBPQkJZRUZOTEUNCnNOS1IxRXdSY2JOaHl6MmgvdDJvYXRUak1JR05CZ05WSFNNRWdZVXdnWUtBRk5MRXNOS1IxRXdSY2JOaHl6MmgNCi90Mm9hdFRqb1dla1pUQmpNUXN3Q1FZRFZRUUdFd0pWVXpFaE1COEdBMVVFQ2hNWVZHaGxJRWR2SUVSaFpHUjUNCklFZHliM1Z3TENCSmJtTXVNVEV3THdZRFZRUUxFeWhIYnlCRVlXUmtlU0JEYkdGemN5QXlJRU5sY25ScFptbGoNCllYUnBiMjRnUVhWMGFHOXlhWFI1Z2dFQU1Bd0dBMVVkRXdRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFRkJRQUQNCmdnRUJBREpMODdMS1BwSDhFc2FoQjR5T2Q2QXpCaFJja0I0WTl3aW1QUW9aK1llQUVXNXA1SllYTVA4MGtXTnkNCk9PN01IQUdqSFpRb3BESDJlc1JVMS9ibE1WZ0Rvc3pPWXR1VVJYTzF2MFhKSkxYVmdnS3RJM2xwamJpMlRjN1ANClRNb3pJK2djaUtxZGkwRnVGc2tnNVltZXpUdmFjUGQrbVNZZ0ZGUWxxMjV6aGVhYklaMEtiSUlPcVBqQ0RQb1ENCkhteVc3NGNOeEE5aGk2M3VneXVWK0k2U2hISTU2eURxZysyRHpaZHVDTHpyVGlhMmN5dmswL1pNL2laeDRtRVINCmRFci9WeHFIRDNWSUxzOVJhUmVnQWhKaGxkWFJRTElRVE83RXJCQkRwcVdlQ3RXVllwb056NGlDeFRJTTVDdWYNClJlWU5ueWljc2JrcVdsZXROdyt2SFgvYnZaOD0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key:     LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRQzBCUC92YzYvdHErMkYKS2pWeDMzTkUzN1NKVnJDTUsvcUl3YTdhRnFhNFRJUUJyVUdmaklacW1NRHpxdVQ3U1NuYnpmNVZXc0x3bVlHTwpvVkE2RmJRdkMrSm9WSEMzL016MlpCOVBxcmxxYi9tb05MS21ZYWUremJ4RVludzFLSkFPZjlnRmZBTzR0R3I3CnVCaVFCMGIrNVNqd09kWkJXOFdmb1BkdFduNFlndmNiQS83alRhNGR1YzRlbEhkdmRyM2M0L0cwS0F5Z1h1Y3AKSStFQWVEUVlQOXRqZVk3WmhZTG9DYUlEVEI3TVg1czNuVWp1Zks3UitIWkowc1B6WGJ3djBxR3NuWXNualFWeApDeHdCRXFWRUFzNXhyUTZvbCtOTWk1RGFGV21MMWVMQU5ocmdWWkRFWWFzRUFlMHhYTUJuRnZEL0lKZUVQMFZHCnZLSW5XL1hMQWdNQkFBRUNnZ0VBTC9acERpNC9nRTVmWVN4bXd1a3E5LzIyUnlVdXNwb0JEVEMxV212UWphZnQKUDlrZWM5am44enl4by9vek9mUTdUOUhwWW1wbEo5OXVVa2NPYmZ0Y1gzQ0dLUS9lWEZiaGNRQXFDM3JNSGR5cApvclF2cVA2NXg2OWU2c1Ztbkc4ck9vRzdWM0s4TnhqeXJCQlhrd0F0WFRwSEZ3SUI0TFlIeUVrRnd6L3Arck52Ck5JUFdZd0JQa2RXNEZHUVZNMm9BZ2h5S2VUajhOaENSVlJBeG1NTFdlVFdRZy9pUW1UamdKSmtsV3hwV3lkOXUKZ2FEYzQ4eHZjcDN1YUplL0FuMGlEUE5ZMUNwNnc0T3NMME9IL2N0RHpha0p4S1VFTTBLN0xhSnlld0M0Z2t0YQpheld2S2ZsMzR4UmdPVGVrQnB1MUVBS0x4VGFSaW1xRWdUMG9TT0RUNlFLQmdRRHFva0UvQU1PMGQxWEdta2ZIClVSdktQa244Z3Iwa2ZZWmJDMXc4aEo4UU12NEFleXUvbjl2SkE5WUVpMklGb01vT2l5SXdMazJKUk9GVm5nL2YKeHh3M1lFV1NXSHpQdlVlRXMvUlMxSjBxZGJ4ckEwTHd1a3lUaDdudUd3MVloczM3eWVSVHhMQnNKZUdRSWJuSgpSUVVGMDI5Z3ErcmovazJSWGZiVkJaME1iUUtCZ1FERWFaWHlPK2RZSTdtNXdIOEthTzhlaThhUU9YbDlCVFEvCllvRUorRGFTcVJvQ2gyZ1d0M01VRFJaczNOeVJUU2U3TVdpd2NPQnhCc1hyS2hTUGJXeE9tMTJtRGFsUk9VdnEKRFNFQVFFNTFGc2J5VXc5T3RHbWY1dDRublU3RktZS1R1TmZrc3dyaEk5cnhEN1JPczNuRExDTWh5R1JpNHZnSgpuMXFtTktnNEZ3S0JnUURTdWJTVmkrODRKakVnTkRHZy9lUlNpQXpVdnVwMldsSVBkSzE3SUxUbXpKVTVBMll3CkxMY3Myc2djdnIzalJod1NZYnpydnJvZVBZR083bTFkVWlxeVJVRldoU2hiUHFoN3MwOE1FUzJ5RTVtTUZwckoKTHRoVmE0RitLa2ViS1Q3WUV1T0FwRmE2V204eGpraVlUZWVMNnUvTng3a20ySjc3bm9Odm9DSURKUUtCZ1FDbwpaQW1kT3dSMWlYT0NzR2w2aUVweHVzNUsraXVSSnZRTFg2MVgyY2tYNWdpWm9ITjUvbCtZRWp4bXF0Z2picTJnCmpKUy9xSmFUOElXZ3Yxd1BOM1lDMHFyd1lZZ0hUZ01xcjRUYWpVZDJsVWVObSs1a3dNSkp5QW93bG1waEdOeU4KUDQxQTBzdUNDRlorRThPM01hSXoxVlJ0Y3p1MWwvZWxjRXlzY0RyRWt3S0JnQW1QWnFHdm9oZEwxUENISVZoawpJNE0wYTlCaXZUVnZ0SWFCemNwR0JsQituMHdCUFpNaGJyT1o5amlva2FzTVJUM1pxNXdUTU9lbHp6OFZ2d013Ck1uaVpMaXpCbmZ1aVVTRGZRY1dsNWlDRlpyT2hwbjJHR1BLazVxdWVHZG1LVVZmaDRQVnVsQlRBNTdpTnAzT0kKV0JQYnZJYUhpS21Cc0ZyaEU0UEpDeWZCCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
---
# Source: keel-helm/templates/keel.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sdkserver-config-0-5332
  namespace: keel-cn
binaryData:
  config.xml: |
    
---
# Source: keel-helm/templates/keel.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sdkserver-config-1-5332
  namespace: keel-cn
binaryData:
  config.xml: |
    
---
# Source: keel-helm/templates/keel.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sdkserver-config-base-5332
  namespace: keel-cn
binaryData:
  accountdb.xml: |
    PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iR0JLIj8+Cjw/eG1sLXN0eWxlc2hlZXQgdHlwZT0idGV4dC94c2wiIGhyZWY9InRhYmxlLnhzbCI/PgoKPGFwcGxpY2F0aW9uIGRlYnVnPSJmYWxzZSIgYmVhbnM9ImNvbS5hY3MuYWNjb3VudCIgYmVhbmJhc2U9InNyYy9jb20vYWNzL2FjY291bnQiIGNvdW50ZXJob2xkZXJuYW1lPSJzdG9yYWdlIj4KCjxkcml2ZXIgbmFtZT0iY29tLm15c3FsLmpkYmMuRHJpdmVyIiAvPgo8IS0tIDEwLjIzNi4xMDAuMjggLS0+Cjxjb25uZWN0aW9uIG5hbWU9ImF1dGgwIiBwb29sc2l6ZT0iMyIgdXJsPSJqZGJjOm15c3FsOi8vMTAuMjM2LjI1NC4xODk6MzMwNi9hY2NvdW50ZGJfdGVzdD9zZXJ2ZXJUaW1lem9uZT1Bc2lhL1NoYW5naGFpIiB1c2VybmFtZT0iYWNzcGFzc3BvcnQiIHBhc3N3b3JkPSIxMjNzNTYuLiIgdGVzdElkbGVXYWl0PSJ0cnVlIiB0aW1lQmV0d2VlbkV2aWN0aW9uUnVuc01pbGxpcz0iMzYwMDAwMCIvPgoKICAgIDxyZWRpcyBuYW1lPSJkZWZhdWx0IiBob3N0PSIxMC4yMzYuMjU0LjIwMSIgcG9ydD0iNjM3OSIgbWF4YWN0aXZlPSI1IiBtYXhpZGxlPSI1IiBtYXh3YWl0PSIxMDAwIiB0aW1lb3V0PSIxMDAwIiBwYXNzd29yZD0iS2VlTDEyM3M1Ni4uIiBhdXRoZW50aWNhdGlvbj0idHJ1ZSIgZXhwaXJldGltZT0iODY0MDAwIiAvPgoKPGNhY2hlIG5hbWU9ImFjY291bnRfYnlfdXNlcmlkIiB0eXBlPSJyZWZlcmVuY2UiIGlwPSIyMjYuMS4xLjEiIHBvcnQ9IjQ0NDQiIGxvY2FsX2lwPSIxMjcuMC4wLjEiIHNpemU9IjI2MjE0NCIgcGFydGl0aW9uPSIwIi8+CjxjYWNoZSBuYW1lPSJhY2NvdW50X2J5X25hbWUiIHR5cGU9InJlZmVyZW5jZSIgaXA9IjIyNi4xLjEuMSIgcG9ydD0iNDQ0NSIgbG9jYWxfaXA9IjEyNy4wLjAuMSIgc2l6ZT0iMjYyMTQ0IiBwYXJ0aXRpb249IjAiLz4KPGNhY2hlIG5hbWU9ImJpZHNfYnlfYmlkIiB0eXBlPSJyZWZlcmVuY2UiIGlwPSIyMjYuMS4xLjUiIHBvcnQ9IjQ0NDkiIGxvY2FsX2lwPSIxMjcuMC4wLjEiIHNpemU9IjI2MjE0NCIgcGFydGl0aW9uPSIwIi8+CjxjYWNoZSBuYW1lPSJhY2NvdW50X2J5X2NlbGxwaG9uZSIgdHlwZT0icmVmZXJlbmNlIiBpcD0iMjI2LjEuMS4xIiBwb3J0PSI0NDQ2IiBsb2NhbF9pcD0iMTI3LjAuMC4xIiBzaXplPSIyNjIxNDQiIHBhcnRpdGlvbj0iMCIgaXNvcGVuPSJ0cnVlIi8+CjxjYWNoZSBuYW1lPSJhY2NvdW50X2J5X2VtYWlsIiB0eXBlPSJyZWZlcmVuY2UiIGlwPSIyMjYuMS4xLjEiIHBvcnQ9IjQ0NDciIGxvY2FsX2lwPSIxMjcuMC4wLjEiIHNpemU9IjI2MjE0NCIgcGFydGl0aW9uPSIwIiBpc29wZW49InRydWUiLz4KPGNhY2hlIG5hbWU9ImdhbWV1c2VyX2J5X29wZW5pZGFuZGFwcGlkIiB0eXBlPSJyZWZlcmVuY2UiIGlwPSIyMjYuMS4xLjYiIHBvcnQ9IjQ0NTAiIGxvY2FsX2lwPSIxMjcuMC4wLjEiIHNpemU9IjI2MjE0NCIgcGFydGl0aW9uPSIwIiBpc29wZW49InRydWUiLz4KPGNhY2hlIG5hbWU9InRoaXJkYWNjb3VudF9ieV9vcGVuaWRhbmRhcHBpZCIgdHlwZT0icmVmZXJlbmNlIiBpcD0iMjI2LjEuMS43IiBwb3J0PSI0NDUxIiBsb2NhbF9pcD0iMTI3LjAuMC4xIiBzaXplPSIyNjIxNDQiIHBhcnRpdGlvbj0iMCIgaXNvcGVuPSJ0cnVlIi8+Cgo8L2FwcGxpY2F0aW9uPgo=
  config.properties: |
    QVBQX05BTUU9c2Rrc2VydmVyDQphcHBJbnN0YW5jZUlkPTENCkNIQU5ORUw9MjANClNVQl9DSEFOPTA=
  jdbc.properties: |
    amRiYy5kcml2ZXI9Y29tLm15c3FsLmNqLmpkYmMuRHJpdmVyCmpkYmMudXJsPWpkYmM6bXlzcWw6Ly8xMC4yMzYuMjU0LjE4OTozMzA2L2FjY291bnRkYl90ZXN0P3NlcnZlclRpbWV6b25lPUFzaWEvU2hhbmdoYWkKamRiYy51c2VybmFtZT1hY3NwYXNzcG9ydApqZGJjLnBhc3N3b3JkPTEyM3M1Ni4uCmpkYmMuaW5pdGlhbFNpemU9MTAKamRiYy5tYXhBY3RpdmU9MTAwCmpkYmMubWluSWRsZT0xMApqZGJjLm1heFdhaXQ9MjAwMA==
---
# Source: keel-helm/templates/keel.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sdkserver-update-wait
  namespace: keel-cn
data:
  wait: |
---
# Source: keel-helm/templates/shared.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: keel-shared
  namespace: keel-cn
data:

  wait.sh: |-
    if [[ ! -f /keel/update/wait ]]; then
      exit 0
    fi
    ordinal=${HOSTNAME##*-}
    waits=$(cat /keel/update/wait)
    for wait in $waits; do
      if [[ $wait -eq $ordinal ]]; then
        exit 1
      fi
    done
    exit 0
---
# Source: keel-helm/templates/keel.yaml
apiVersion: v1
kind: Service
metadata:
  name: sdkserver
  namespace: keel-cn
spec:
  selector:
    app: sdkserver
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    name: port-8080
    protocol: TCP
  - port: 8009
    targetPort: 8009
    name: port-8009
    protocol: TCP
---
# Source: keel-helm/templates/keel.yaml
apiVersion: v1
kind: Service
metadata:
  name: sdkserver-headless
  namespace: keel-cn
spec:
  clusterIP: None
  selector:
    app: sdkserver
  ports:
  - port: 8080
    name: port-8080
  - port: 8009
    name: port-8009
---
# Source: keel-helm/templates/keel.yaml
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
 name: sdkserver
 namespace: keel-cn
 labels:
   app: sdkserver
spec:
  serviceName: sdkserver-headless
  replicas: 3
  selector:
    matchLabels:
      app: sdkserver
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: sdkserver
        swck-java-agent-injected: "true"
      annotations:
        sidecar.istio.io/inject: "false"
        strategy.skywalking.apache.org/inject.Container: sdkserver
        strategy.skywalking.apache.org/agent.Overlay: "true"
        agent.skywalking.apache.org/agent.service_name: "agent::sdkserver"
        sidecar.skywalking.apache.org/initcontainer.Image: "harbor.zulong.com/keel-images/skywalking-java:81afeddd084d614c1cfcbcc7c24d0238e9aaab25-java8"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - sdkserver
            topologyKey: kubernetes.io/hostName
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: keel/node
                    operator: In
                    values:
                      - sdkserver
      imagePullSecrets:
        - name: zulong-key
      containers:
        - name: sdkserver
          image: "harbor.zulong.com/keel-images/sdkserver:5332"
          imagePullPolicy: Always
          lifecycle:
            preStop:
              exec:
                command: ["/usr/local/tomcat/bin/catalina.sh stop 20"]
          env:
          - name: KEEL_VERSION
            value: "5332"
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: CONFIG_PATH
            value: "/etc/sdkserver_config"
          - name: SW_AGENT_COLLECTOR_BACKEND_SERVICES
            value: demo-satellite.sky:11800
          resources:
            limits:
              memory: 6G
          ports:
          - containerPort: 8080
            name: port-8080
          - containerPort: 8009
            name: port-8009
          volumeMounts:
            - name: localtime
              mountPath: /etc/localtime
            - name: logs
              mountPath: /export/logs/
            - name: keel-shared
              mountPath: /keel/shared
            - name: update-wait
              mountPath: /keel/update
            - name: config-0
              mountPath: /etc/sdkserver_config/0
            - name: config-1
              mountPath: /etc/sdkserver_config/1
            - name: config-base
              mountPath: /etc/sdkserver_config/base
          startupProbe:
            httpGet:
              path: /api/validate?appid=iprojectios&username=10542&token=2nGbR9ui1fD3v3uzKhMaQMTNYkoXhWTAXqYU6FNrupksSU45ZL1EQriizhzuMRXkwi6VWR6VmfFnyhzGh41j9woR&loginip=1984621578&version=1.0&device_uuid=5688225dc53eb695df7eac4c400505a8e560d45e
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 5
            failureThreshold: 30
      volumes:
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: logs
          hostPath:
            path: /data/keel-cn/sdkserver
        - name: keel-shared
          configMap:
            name: keel-shared
        - name: update-wait
          configMap:
            name: sdkserver-update-wait
        - name: config-0
          configMap:
            name: sdkserver-config-0-5332
        - name: config-1
          configMap:
            name: sdkserver-config-1-5332
        - name: config-base
          configMap:
            name: sdkserver-config-base-5332
---
# Source: keel-helm/templates/keel.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sdkserver-0
  namespace: keel-cn
  annotations:
    nginx.ingress.kubernetes.io/enable-access-log: "true"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
      - sdkserver.zulong.com
      secretName: keel-secret
  rules:
    - host: sdkserver.zulong.com
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: sdkserver
              port:
                number: 8080
