---
# Source: keel-helm/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: keel-secret
  namespace: keel-cn
type: kubernetes.io/tls
data:
  tls.crt:     
  tls.key:     LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRQzBCUC92YzYvdHErMkYKS2pWeDMzTkUzN1NKVnJDTUsvcUl3YTdhRnFhNFRJUUJyVUdmaklacW1NRHpxdVQ3U1NuYnpmNVZXc0x3bVlHTwpvVkE2RmJRdkMrSm9WSEMzL016MlpCOVBxcmxxYi9tb05MS21ZYWUremJ4RVludzFLSkFPZjlnRmZBTzR0R3I3CnVCaVFCMGIrNVNqd09kWkJXOFdmb1BkdFduNFlndmNiQS83alRhNGR1YzRlbEhkdmRyM2M0L0cwS0F5Z1h1Y3AKSStFQWVEUVlQOXRqZVk3WmhZTG9DYUlEVEI3TVg1czNuVWp1Zks3UitIWkowc1B6WGJ3djBxR3NuWXNualFWeApDeHdCRXFWRUFzNXhyUTZvbCtOTWk1RGFGV21MMWVMQU5ocmdWWkRFWWFzRUFlMHhYTUJuRnZEL0lKZUVQMFZHCnZLSW5XL1hMQWdNQkFBRUNnZ0VBTC9acERpNC9nRTVmWVN4bXd1a3E5LzIyUnlVdXNwb0JEVEMxV212UWphZnQKUDlrZWM5am44enl4by9vek9mUTdUOUhwWW1wbEo5OXVVa2NPYmZ0Y1gzQ0dLUS9lWEZiaGNRQXFDM3JNSGR5cApvclF2cVA2NXg2OWU2c1Ztbkc4ck9vRzdWM0s4TnhqeXJCQlhrd0F0WFRwSEZ3SUI0TFlIeUVrRnd6L3Arck52Ck5JUFdZd0JQa2RXNEZHUVZNMm9BZ2h5S2VUajhOaENSVlJBeG1NTFdlVFdRZy9pUW1UamdKSmtsV3hwV3lkOXUKZ2FEYzQ4eHZjcDN1YUplL0FuMGlEUE5ZMUNwNnc0T3NMME9IL2N0RHpha0p4S1VFTTBLN0xhSnlld0M0Z2t0YQpheld2S2ZsMzR4UmdPVGVrQnB1MUVBS0x4VGFSaW1xRWdUMG9TT0RUNlFLQmdRRHFva0UvQU1PMGQxWEdta2ZIClVSdktQa244Z3Iwa2ZZWmJDMXc4aEo4UU12NEFleXUvbjl2SkE5WUVpMklGb01vT2l5SXdMazJKUk9GVm5nL2YKeHh3M1lFV1NXSHpQdlVlRXMvUlMxSjBxZGJ4ckEwTHd1a3lUaDdudUd3MVloczM3eWVSVHhMQnNKZUdRSWJuSgpSUVVGMDI5Z3ErcmovazJSWGZiVkJaME1iUUtCZ1FERWFaWHlPK2RZSTdtNXdIOEthTzhlaThhUU9YbDlCVFEvCllvRUorRGFTcVJvQ2gyZ1d0M01VRFJaczNOeVJUU2U3TVdpd2NPQnhCc1hyS2hTUGJXeE9tMTJtRGFsUk9VdnEKRFNFQVFFNTFGc2J5VXc5T3RHbWY1dDRublU3RktZS1R1TmZrc3dyaEk5cnhEN1JPczNuRExDTWh5R1JpNHZnSgpuMXFtTktnNEZ3S0JnUURTdWJTVmkrODRKakVnTkRHZy9lUlNpQXpVdnVwMldsSVBkSzE3SUxUbXpKVTVBMll3CkxMY3Myc2djdnIzalJod1NZYnpydnJvZVBZR083bTFkVWlxeVJVRldoU2hiUHFoN3MwOE1FUzJ5RTVtTUZwckoKTHRoVmE0RitLa2ViS1Q3WUV1T0FwRmE2V204eGpraVlUZWVMNnUvTng3a20ySjc3bm9Odm9DSURKUUtCZ1FDbwpaQW1kT3dSMWlYT0NzR2w2aUVweHVzNUsraXVSSnZRTFg2MVgyY2tYNWdpWm9ITjUvbCtZRWp4bXF0Z2picTJnCmpKUy9xSmFUOElXZ3Yxd1BOM1lDMHFyd1lZZ0hUZ01xcjRUYWpVZDJsVWVObSs1a3dNSkp5QW93bG1waEdOeU4KUDQxQTBzdUNDRlorRThPM01hSXoxVlJ0Y3p1MWwvZWxjRXlzY0RyRWt3S0JnQW1QWnFHdm9oZEwxUENISVZoawpJNE0wYTlCaXZUVnZ0SWFCemNwR0JsQituMHdCUFpNaGJyT1o5amlva2FzTVJUM1pxNXdUTU9lbHp6OFZ2d013Ck1uaVpMaXpCbmZ1aVVTRGZRY1dsNWlDRlpyT2hwbjJHR1BLazVxdWVHZG1LVVZmaDRQVnVsQlRBNTdpTnAzT0kKV0JQYnZJYUhpS21Cc0ZyaEU0UEpDeWZCCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
---
# Source: keel-helm/templates/keel.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sdkserver-config-0-5332
  namespace: keel-cn
binaryData:
  config.xml: |
    
---
# Source: keel-helm/templates/keel.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sdkserver-config-1-5332
  namespace: keel-cn
binaryData:
  config.xml: |
    
---
# Source: keel-helm/templates/keel.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sdkserver-config-base-5332
  namespace: keel-cn
binaryData:
  accountdb.xml: |
    PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iR0JLIj8+Cjw/eG1sLXN0eWxlc2hlZXQgdHlwZT0idGV4dC94c2wiIGhyZWY9InRhYmxlLnhzbCI/PgoKPGFwcGxpY2F0aW9uIGRlYnVnPSJmYWxzZSIgYmVhbnM9ImNvbS5hY3MuYWNjb3VudCIgYmVhbmJhc2U9InNyYy9jb20vYWNzL2FjY291bnQiIGNvdW50ZXJob2xkZXJuYW1lPSJzdG9yYWdlIj4KCjxkcml2ZXIgbmFtZT0iY29tLm15c3FsLmpkYmMuRHJpdmVyIiAvPgo8IS0tIDEwLjIzNi4xMDAuMjggLS0+Cjxjb25uZWN0aW9uIG5hbWU9ImF1dGgwIiBwb29sc2l6ZT0iMyIgdXJsPSJqZGJjOm15c3FsOi8vMTAuMjM2LjI1NC4xODk6MzMwNi9hY2NvdW50ZGJfdGVzdD9zZXJ2ZXJUaW1lem9uZT1Bc2lhL1NoYW5naGFpIiB1c2VybmFtZT0iYWNzcGFzc3BvcnQiIHBhc3N3b3JkPSIxMjNzNTYuLiIgdGVzdElkbGVXYWl0PSJ0cnVlIiB0aW1lQmV0d2VlbkV2aWN0aW9uUnVuc01pbGxpcz0iMzYwMDAwMCIvPgoKICAgIDxyZWRpcyBuYW1lPSJkZWZhdWx0IiBob3N0PSIxMC4yMzYuMjU0LjIwMSIgcG9ydD0iNjM3OSIgbWF4YWN0aXZlPSI1IiBtYXhpZGxlPSI1IiBtYXh3YWl0PSIxMDAwIiB0aW1lb3V0PSIxMDAwIiBwYXNzd29yZD0iS2VlTDEyM3M1Ni4uIiBhdXRoZW50aWNhdGlvbj0idHJ1ZSIgZXhwaXJldGltZT0iODY0MDAwIiAvPgoKPGNhY2hlIG5hbWU9ImFjY291bnRfYnlfdXNlcmlkIiB0eXBlPSJyZWZlcmVuY2UiIGlwPSIyMjYuMS4xLjEiIHBvcnQ9IjQ0NDQiIGxvY2FsX2lwPSIxMjcuMC4wLjEiIHNpemU9IjI2MjE0NCIgcGFydGl0aW9uPSIwIi8+CjxjYWNoZSBuYW1lPSJhY2NvdW50X2J5X25hbWUiIHR5cGU9InJlZmVyZW5jZSIgaXA9IjIyNi4xLjEuMSIgcG9ydD0iNDQ0NSIgbG9jYWxfaXA9IjEyNy4wLjAuMSIgc2l6ZT0iMjYyMTQ0IiBwYXJ0aXRpb249IjAiLz4KPGNhY2hlIG5hbWU9ImJpZHNfYnlfYmlkIiB0eXBlPSJyZWZlcmVuY2UiIGlwPSIyMjYuMS4xLjUiIHBvcnQ9IjQ0NDkiIGxvY2FsX2lwPSIxMjcuMC4wLjEiIHNpemU9IjI2MjE0NCIgcGFydGl0aW9uPSIwIi8+CjxjYWNoZSBuYW1lPSJhY2NvdW50X2J5X2NlbGxwaG9uZSIgdHlwZT0icmVmZXJlbmNlIiBpcD0iMjI2LjEuMS4xIiBwb3J0PSI0NDQ2IiBsb2NhbF9pcD0iMTI3LjAuMC4xIiBzaXplPSIyNjIxNDQiIHBhcnRpdGlvbj0iMCIgaXNvcGVuPSJ0cnVlIi8+CjxjYWNoZSBuYW1lPSJhY2NvdW50X2J5X2VtYWlsIiB0eXBlPSJyZWZlcmVuY2UiIGlwPSIyMjYuMS4xLjEiIHBvcnQ9IjQ0NDciIGxvY2FsX2lwPSIxMjcuMC4wLjEiIHNpemU9IjI2MjE0NCIgcGFydGl0aW9uPSIwIiBpc29wZW49InRydWUiLz4KPGNhY2hlIG5hbWU9ImdhbWV1c2VyX2J5X29wZW5pZGFuZGFwcGlkIiB0eXBlPSJyZWZlcmVuY2UiIGlwPSIyMjYuMS4xLjYiIHBvcnQ9IjQ0NTAiIGxvY2FsX2lwPSIxMjcuMC4wLjEiIHNpemU9IjI2MjE0NCIgcGFydGl0aW9uPSIwIiBpc29wZW49InRydWUiLz4KPGNhY2hlIG5hbWU9InRoaXJkYWNjb3VudF9ieV9vcGVuaWRhbmRhcHBpZCIgdHlwZT0icmVmZXJlbmNlIiBpcD0iMjI2LjEuMS43IiBwb3J0PSI0NDUxIiBsb2NhbF9pcD0iMTI3LjAuMC4xIiBzaXplPSIyNjIxNDQiIHBhcnRpdGlvbj0iMCIgaXNvcGVuPSJ0cnVlIi8+Cgo8L2FwcGxpY2F0aW9uPgo=
  config.properties: |
    QVBQX05BTUU9c2Rrc2VydmVyDQphcHBJbnN0YW5jZUlkPTENCkNIQU5ORUw9MjANClNVQl9DSEFOPTA=
  jdbc.properties: |
    amRiYy5kcml2ZXI9Y29tLm15c3FsLmNqLmpkYmMuRHJpdmVyCmpkYmMudXJsPWpkYmM6bXlzcWw6Ly8xMC4yMzYuMjU0LjE4OTozMzA2L2FjY291bnRkYl90ZXN0P3NlcnZlclRpbWV6b25lPUFzaWEvU2hhbmdoYWkKamRiYy51c2VybmFtZT1hY3NwYXNzcG9ydApqZGJjLnBhc3N3b3JkPTEyM3M1Ni4uCmpkYmMuaW5pdGlhbFNpemU9MTAKamRiYy5tYXhBY3RpdmU9MTAwCmpkYmMubWluSWRsZT0xMApqZGJjLm1heFdhaXQ9MjAwMA==
---
# Source: keel-helm/templates/keel.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sdkserver-crontab-conf
  namespace: keel-cn
data:
  crontab: |
    SHELL=/bin/bash
    PATH=/sbin:/bin:/usr/sbin:/usr/bin
    MAILTO=root
    
    # For details see man 4 crontabs
    
    # Example of job definition:
    # .---------------- minute (0 - 59)
    # |  .------------- hour (0 - 23)
    # |  |  .---------- day of month (1 - 31)
    # |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...
    # |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
    # |  |  |  |  |
    # *  *  *  *  * user-name  command to be executed
    * * * * * root /bin/sh /crontab/test.sh
    * * * * * root /bin/sh /crontab/test2.sh
    * * * * * root /bin/sh /crontab/test3.sh
---
# Source: keel-helm/templates/keel.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sdkserver-crontab-scripts
  namespace: keel-cn
data:

  test.sh: ls -l /export/logs/sdkserver/program > /export/logs/sdkserver/tmp.log
  test2.sh: echo "hello goddy" > /export/logs/sdkserver/tmp2.log
  test3.sh: echo "hello kids" > /export/logs/sdkserver/tmp3.log
---
# Source: keel-helm/templates/keel.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sdkserver-update-wait
  namespace: keel-cn
data:
  wait: |
---
# Source: keel-helm/templates/keel.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: riskcontrol-config-base-5172
  namespace: keel-cn
binaryData:
  accountdb.xml: |
    PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iR0JLIj8+Cjw/eG1sLXN0eWxlc2hlZXQgdHlwZT0idGV4dC94c2wiIGhyZWY9InRhYmxlLnhzbCI/PgoKPGFwcGxpY2F0aW9uIGRlYnVnPSJmYWxzZSIgYmVhbnM9ImNvbS5hY3MuYWNjb3VudCIgYmVhbmJhc2U9InNyYy9jb20vYWNzL2FjY291bnQiIGNvdW50ZXJob2xkZXJuYW1lPSJzdG9yYWdlIj4KCjxkcml2ZXIgbmFtZT0iY29tLm15c3FsLmpkYmMuRHJpdmVyIiAvPgoKPGNvbm5lY3Rpb24gbmFtZT0iYXV0aDAiIHBvb2xzaXplPSIzIiB1cmw9ImpkYmM6bXlzcWw6Ly8xMC4yMzYuMjU0LjE4OTozMzA2L2FjY291bnRkYl90ZXN0P3NlcnZlclRpbWV6b25lPUFzaWEvU2hhbmdoYWkiIHVzZXJuYW1lPSJhY3NwYXNzcG9ydCIgcGFzc3dvcmQ9IjEyM3M1Ni4uIiB0ZXN0SWRsZVdhaXQ9InRydWUiIHRpbWVCZXR3ZWVuRXZpY3Rpb25SdW5zTWlsbGlzPSIzNjAwMDAwIi8+Cgo8Y2FjaGUgbmFtZT0iYWNjb3VudF9ieV91c2VyaWQiIHR5cGU9InJlZmVyZW5jZSIgaXA9IjIyNi4xLjEuMSIgcG9ydD0iNDQ0NCIgbG9jYWxfaXA9IjEyNy4wLjAuMSIgc2l6ZT0iMjYyMTQ0IiBwYXJ0aXRpb249IjAiLz4KPGNhY2hlIG5hbWU9ImFjY291bnRfYnlfbmFtZSIgdHlwZT0icmVmZXJlbmNlIiBpcD0iMjI2LjEuMS4xIiBwb3J0PSI0NDQ1IiBsb2NhbF9pcD0iMTI3LjAuMC4xIiBzaXplPSIyNjIxNDQiIHBhcnRpdGlvbj0iMCIvPgo8Y2FjaGUgbmFtZT0iYXBwc19ieV9hcHBpZCIgdHlwZT0icmVmZXJlbmNlIiBpcD0iMjI2LjEuMS4yIiBwb3J0PSI0NDQ2IiBsb2NhbF9pcD0iMTI3LjAuMC4xIiBzaXplPSIyNjIxNDQiIHBhcnRpdGlvbj0iMCIvPgo8Y2FjaGUgbmFtZT0ibGFzdGxvZ2luX2Fjc3Bhc3NfYnlfdXNlcmlkIiB0eXBlPSJyZWZlcmVuY2UiIGlwPSIyMjYuMS4xLjMiIHBvcnQ9IjQ0NDciIGxvY2FsX2lwPSIxMjcuMC4wLjEiIHNpemU9IjI2MjE0NCIgcGFydGl0aW9uPSIwIi8+CjxjYWNoZSBuYW1lPSJsYXN0bG9naW5fc2RrX2J5X3VzZXJpZCIgdHlwZT0icmVmZXJlbmNlIiBpcD0iMjI2LjEuMS40IiBwb3J0PSI0NDQ4IiBsb2NhbF9pcD0iMTI3LjAuMC4xIiBzaXplPSIyNjIxNDQiIHBhcnRpdGlvbj0iMCIvPgo8Y2FjaGUgbmFtZT0iYmlkc19ieV9iaWQiIHR5cGU9InJlZmVyZW5jZSIgaXA9IjIyNi4xLjEuNSIgcG9ydD0iNDQ0OSIgbG9jYWxfaXA9IjEyNy4wLjAuMSIgc2l6ZT0iMjYyMTQ0IiBwYXJ0aXRpb249IjAiLz4KCgo8L2FwcGxpY2F0aW9uPgo=
  config.xml: |
    
  jdbc.properties: |
    amRiYy5kcml2ZXI9Y29tLm15c3FsLmpkYmMuRHJpdmVyDQpqZGJjLnVybD1qZGJjOm15c3FsOi8vMTAuMjM2LjI1NC4xODk6MzMwNi9hY2NvdW50ZGJfdGVzdA0KamRiYy51c2VybmFtZT1hY3NwYXNzcG9ydA0KamRiYy5wYXNzd29yZD0xMjNzNTYuLg==
---
# Source: keel-helm/templates/keel.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: riskcontrol-update-wait
  namespace: keel-cn
data:
  wait: |
---
# Source: keel-helm/templates/keel.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sdkslave-config-base-5148
  namespace: keel-cn
binaryData:
  accountdb.xml: |
    PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iR0JLIj8+Cjw/eG1sLXN0eWxlc2hlZXQgdHlwZT0idGV4dC94c2wiIGhyZWY9InRhYmxlLnhzbCI/PgoKPGFwcGxpY2F0aW9uIGRlYnVnPSJmYWxzZSIgYmVhbnM9ImNvbS5hY3MuYWNjb3VudCIgYmVhbmJhc2U9InNyYy9jb20vYWNzL2FjY291bnQiIGNvdW50ZXJob2xkZXJuYW1lPSJzdG9yYWdlIj4KCjxkcml2ZXIgbmFtZT0iY29tLm15c3FsLmpkYmMuRHJpdmVyIiAvPgoKPCEtLSAxMC4yMzYuMTAwLjI4IC0tPgo8Y29ubmVjdGlvbiBuYW1lPSJhdXRoMCIgcG9vbHNpemU9IjMiIHVybD0iamRiYzpteXNxbDovLzEwLjIzNi4yNTQuMjAyOjMzMDYvYWNjb3VudGRiX3Rlc3QiIHVzZXJuYW1lPSJhY3NwYXNzcG9ydCIgcGFzc3dvcmQ9IjEyM3M1Ni4uIi8+Cgo8Y2FjaGUgbmFtZT0iYWNjb3VudF9ieV91c2VyaWQiIHR5cGU9InJlZmVyZW5jZSIgaXA9IjIyNi4xLjEuMSIgcG9ydD0iNDQ0NCIgbG9jYWxfaXA9IjEyNy4wLjAuMSIgc2l6ZT0iMjYyMTQ0IiBwYXJ0aXRpb249IjAiLz4KPGNhY2hlIG5hbWU9ImFjY291bnRfYnlfbmFtZSIgdHlwZT0icmVmZXJlbmNlIiBpcD0iMjI2LjEuMS4xIiBwb3J0PSI0NDQ1IiBsb2NhbF9pcD0iMTI3LjAuMC4xIiBzaXplPSIyNjIxNDQiIHBhcnRpdGlvbj0iMCIvPgo8Y2FjaGUgbmFtZT0iYmlkc19ieV9iaWQiIHR5cGU9InJlZmVyZW5jZSIgaXA9IjIyNi4xLjEuNSIgcG9ydD0iNDQ0OSIgbG9jYWxfaXA9IjEyNy4wLjAuMSIgc2l6ZT0iMjYyMTQ0IiBwYXJ0aXRpb249IjAiLz4KPGNhY2hlIG5hbWU9ImFjY291bnRfYnlfY2VsbHBob25lIiB0eXBlPSJyZWZlcmVuY2UiIGlwPSIyMjYuMS4xLjEiIHBvcnQ9IjQ0NDYiIGxvY2FsX2lwPSIxMjcuMC4wLjEiIHNpemU9IjI2MjE0NCIgcGFydGl0aW9uPSIwIiBpc29wZW49InRydWUiLz4KPGNhY2hlIG5hbWU9ImFjY291bnRfYnlfZW1haWwiIHR5cGU9InJlZmVyZW5jZSIgaXA9IjIyNi4xLjEuMSIgcG9ydD0iNDQ0NyIgbG9jYWxfaXA9IjEyNy4wLjAuMSIgc2l6ZT0iMjYyMTQ0IiBwYXJ0aXRpb249IjAiIGlzb3Blbj0idHJ1ZSIvPgo8Y2FjaGUgbmFtZT0iZ2FtZXVzZXJfYnlfYXBwaWRhbmRvcGVuaWQiIHR5cGU9InJlZmVyZW5jZSIgaXA9IjIyNi4xLjEuNiIgcG9ydD0iNDQ1MCIgbG9jYWxfaXA9IjEyNy4wLjAuMSIgc2l6ZT0iMjYyMTQ0IiBwYXJ0aXRpb249IjAiLz4KPGNhY2hlIG5hbWU9InRoaXJkYWNjb3VudF9ieV9hcHBpZGFuZG9wZW5pZCIgdHlwZT0icmVmZXJlbmNlIiBpcD0iMjI2LjEuMS43IiBwb3J0PSI0NDUxIiBsb2NhbF9pcD0iMTI3LjAuMC4xIiBzaXplPSIyNjIxNDQiIHBhcnRpdGlvbj0iMCIvPgoKPC9hcHBsaWNhdGlvbj4K
  config.xml: |
    
---
# Source: keel-helm/templates/keel.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sdkslave-update-wait
  namespace: keel-cn
data:
  wait: |
---
# Source: keel-helm/templates/shared.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: keel-shared
  namespace: keel-cn
data:

  wait.sh: |-
    if [[ ! -f /keel/update/wait ]]; then
      exit 0
    fi
    ordinal=${HOSTNAME##*-}
    waits=$(cat /keel/update/wait)
    for wait in $waits; do
      if [[ $wait -eq $ordinal ]]; then
        exit 1
      fi
    done
    exit 0
---
# Source: keel-helm/templates/keel.yaml
apiVersion: v1
kind: Service
metadata:
  name: sdkserver
  namespace: keel-cn
spec:
  selector:
    app: sdkserver
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    name: port-8080
    protocol: TCP
  - port: 8009
    targetPort: 8009
    name: port-8009
    protocol: TCP
---
# Source: keel-helm/templates/keel.yaml
apiVersion: v1
kind: Service
metadata:
  name: sdkserver-headless
  namespace: keel-cn
spec:
  clusterIP: None
  selector:
    app: sdkserver
  ports:
  - port: 8080
    name: port-8080
  - port: 8009
    name: port-8009
---
# Source: keel-helm/templates/keel.yaml
apiVersion: v1
kind: Service
metadata:
  name: riskcontrol-headless
  namespace: keel-cn
spec:
  clusterIP: None
  selector:
    app: riskcontrol
---
# Source: keel-helm/templates/keel.yaml
apiVersion: v1
kind: Service
metadata:
  name: sdkslave-headless
  namespace: keel-cn
spec:
  clusterIP: None
  selector:
    app: sdkslave
---
# Source: keel-helm/templates/keel.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: sdkserver-crontab
  namespace: keel-cn
spec:
  selector:
    matchLabels:
      app: sdkserver-crontab
  template:
    metadata:
      labels:
        app: sdkserver-crontab
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: keel/node
                    operator: In
                    values:
                      - sdkserver
      imagePullSecrets:
        - name: zulong-key
      containers:
        - name: crontab
          image: harbor.zulong.com/keel-images/crontab:latest
          imagePullPolicy: Always
          env:
            - name: CRONTAB_PATH
              value: /crontab
            - name: REVISION
              value: "1"
          volumeMounts:
            - name: localtime
              mountPath: /etc/localtime
            - name: logs
              mountPath: /export/logs/
            - name: crontab-conf
              mountPath: /etc/crontab
              subPath: crontab
            - name: crontab-scripts
              mountPath: /crontab
      volumes:
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: logs
          hostPath:
            path: /data/keel-cn/sdkserver
        - name: crontab-conf
          configMap:
            name: sdkserver-crontab-conf
        - name: crontab-scripts
          configMap:
            name: sdkserver-crontab-scripts
---
# Source: keel-helm/templates/keel.yaml
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
 name: sdkserver
 namespace: keel-cn
 labels:
   app: sdkserver
spec:
  serviceName: sdkserver-headless
  replicas: 2
  selector:
    matchLabels:
      app: sdkserver
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: sdkserver
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - sdkserver
            topologyKey: kubernetes.io/hostName
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: keel/node
                    operator: In
                    values:
                      - sdkserver
      imagePullSecrets:
        - name: zulong-key
      containers:
        - name: sdkserver
          image: "harbor.zulong.com/keel-images/sdkserver:5332"
          imagePullPolicy: Always
          lifecycle:
            preStop:
              exec:
                command: ["/usr/local/tomcat/bin/catalina.sh stop 20"]
          env:
          - name: KEEL_VERSION
            value: "5332"
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: CONFIG_PATH
            value: "/etc/sdkserver_config"
          resources:
            limits:
              memory: 6G
          ports:
          - containerPort: 8080
            name: port-8080
          - containerPort: 8009
            name: port-8009
          volumeMounts:
            - name: localtime
              mountPath: /etc/localtime
            - name: logs
              mountPath: /export/logs/
            - name: keel-shared
              mountPath: /keel/shared
            - name: update-wait
              mountPath: /keel/update
            - name: config-0
              mountPath: /etc/sdkserver_config/0
            - name: config-1
              mountPath: /etc/sdkserver_config/1
            - name: config-base
              mountPath: /etc/sdkserver_config/base
          startupProbe:
            httpGet:
              path: /api/validate?appid=iprojectios&username=10542&token=2nGbR9ui1fD3v3uzKhMaQMTNYkoXhWTAXqYU6FNrupksSU45ZL1EQriizhzuMRXkwi6VWR6VmfFnyhzGh41j9woR&loginip=1984621578&version=1.0&device_uuid=5688225dc53eb695df7eac4c400505a8e560d45e
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 5
            failureThreshold: 30
      volumes:
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: logs
          hostPath:
            path: /data/keel-cn/sdkserver
        - name: keel-shared
          configMap:
            name: keel-shared
        - name: update-wait
          configMap:
            name: sdkserver-update-wait
        - name: config-0
          configMap:
            name: sdkserver-config-0-5332
        - name: config-1
          configMap:
            name: sdkserver-config-1-5332
        - name: config-base
          configMap:
            name: sdkserver-config-base-5332
---
# Source: keel-helm/templates/keel.yaml
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
 name: riskcontrol
 namespace: keel-cn
 labels:
   app: riskcontrol
spec:
  serviceName: riskcontrol-headless
  replicas: 1
  selector:
    matchLabels:
      app: riskcontrol
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: riskcontrol
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - riskcontrol
            topologyKey: kubernetes.io/hostName
      imagePullSecrets:
        - name: zulong-key
      containers:
        - name: riskcontrol
          image: "harbor.zulong.com/keel-images/riskcontrol:5172"
          imagePullPolicy: Always
          lifecycle:
            preStop:
              exec:
                command: ["/usr/local/tomcat/bin/catalina.sh stop 20"]
          env:
          - name: KEEL_VERSION
            value: "5172"
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: CONFIG_PATH
            value: "/etc/rcserver_config"
          resources:
            limits:
              memory: 4G
          volumeMounts:
            - name: localtime
              mountPath: /etc/localtime
            - name: logs
              mountPath: /export/logs/RiskControl
            - name: keel-shared
              mountPath: /keel/shared
            - name: update-wait
              mountPath: /keel/update
            - name: config-base
              mountPath: /etc/rcserver_config/base
      volumes:
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: logs
          hostPath:
            path: /data/keel-cn/riskcontrol
        - name: keel-shared
          configMap:
            name: keel-shared
        - name: update-wait
          configMap:
            name: riskcontrol-update-wait
        - name: config-base
          configMap:
            name: riskcontrol-config-base-5172
---
# Source: keel-helm/templates/keel.yaml
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
 name: sdkslave
 namespace: keel-cn
 labels:
   app: sdkslave
spec:
  serviceName: sdkslave-headless
  replicas: 1
  selector:
    matchLabels:
      app: sdkslave
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: sdkslave
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - sdkslave
            topologyKey: kubernetes.io/hostName
      imagePullSecrets:
        - name: zulong-key
      containers:
        - name: sdkslave
          image: "harbor.zulong.com/keel-images/sdkslave:5148"
          imagePullPolicy: Always
          lifecycle:
            preStop:
              exec:
                command: ["/usr/local/tomcat/bin/catalina.sh stop 20"]
          env:
          - name: KEEL_VERSION
            value: "5148"
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: CONFIG_PATH
            value: "/etc/sdkslave_config"
          resources:
            limits:
              memory: 4G
          volumeMounts:
            - name: localtime
              mountPath: /etc/localtime
            - name: logs
              mountPath: /export/logs/sdkslave
            - name: keel-shared
              mountPath: /keel/shared
            - name: update-wait
              mountPath: /keel/update
            - name: config-base
              mountPath: /etc/sdkslave_config/base
      volumes:
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: logs
          hostPath:
            path: /data/keel-cn/sdkslave
        - name: keel-shared
          configMap:
            name: keel-shared
        - name: update-wait
          configMap:
            name: sdkslave-update-wait
        - name: config-base
          configMap:
            name: sdkslave-config-base-5148
---
# Source: keel-helm/templates/keel.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sdkserver-0
  namespace: keel-cn
  annotations:
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.236.254.0/24"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
      - sdkserver.zulong.com
      secretName: keel-secret
  rules:
    - host: sdkserver.zulong.com
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: sdkserver
              port:
                number: 8080
---
# Source: keel-helm/templates/keel.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sdkserver-1
  namespace: keel-cn
  annotations:
    nginx.ingress.kubernetes.io/enable-access-log: "false"
    nginx.ingress.kubernetes.io/configuration-snippet: "proxy_set_header X-Forwarded-For $remote_addr;\nproxy_redirect http:// https://;\n"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
      - sdkserver.zulong.com
      secretName: keel-secret
  rules:
    - host: sdkserver.zulong.com
      http:
        paths:
        - path: /images/
          pathType: Prefix
          backend:
            service:
              name: sdkserver
              port:
                number: 8080
        - path: /js/
          pathType: Prefix
          backend:
            service:
              name: sdkserver
              port:
                number: 8080
        - path: /css/
          pathType: Prefix
          backend:
            service:
              name: sdkserver
              port:
                number: 8080
---
# Source: keel-helm/templates/keel.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sdkserver-2
  namespace: keel-cn
  annotations:
    nginx.ingress.kubernetes.io/enable-access-log: "false"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
      - sdkserver.zulong.com
      secretName: keel-secret
  rules:
    - host: sdkserver.zulong.com
      http:
        paths:
        - path: /api/validate
          pathType: Exact
          backend:
            service:
              name: sdkserver
              port:
                number: 8080
