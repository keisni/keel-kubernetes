---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: v1
kind: Secret
metadata:
  name: keel-rabbitmq-os-secret
  namespace: keel-cn
type: Opaque
stringData:
  username: zulongrc
  password: Zulong@123.com
---
# Source: keel-helm/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: keel-secret
  namespace: keel-cn
type: kubernetes.io/tls
data:
  tls.crt:     
  tls.key:     LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRQzBCUC92YzYvdHErMkYKS2pWeDMzTkUzN1NKVnJDTUsvcUl3YTdhRnFhNFRJUUJyVUdmaklacW1NRHpxdVQ3U1NuYnpmNVZXc0x3bVlHTwpvVkE2RmJRdkMrSm9WSEMzL016MlpCOVBxcmxxYi9tb05MS21ZYWUremJ4RVludzFLSkFPZjlnRmZBTzR0R3I3CnVCaVFCMGIrNVNqd09kWkJXOFdmb1BkdFduNFlndmNiQS83alRhNGR1YzRlbEhkdmRyM2M0L0cwS0F5Z1h1Y3AKSStFQWVEUVlQOXRqZVk3WmhZTG9DYUlEVEI3TVg1czNuVWp1Zks3UitIWkowc1B6WGJ3djBxR3NuWXNualFWeApDeHdCRXFWRUFzNXhyUTZvbCtOTWk1RGFGV21MMWVMQU5ocmdWWkRFWWFzRUFlMHhYTUJuRnZEL0lKZUVQMFZHCnZLSW5XL1hMQWdNQkFBRUNnZ0VBTC9acERpNC9nRTVmWVN4bXd1a3E5LzIyUnlVdXNwb0JEVEMxV212UWphZnQKUDlrZWM5am44enl4by9vek9mUTdUOUhwWW1wbEo5OXVVa2NPYmZ0Y1gzQ0dLUS9lWEZiaGNRQXFDM3JNSGR5cApvclF2cVA2NXg2OWU2c1Ztbkc4ck9vRzdWM0s4TnhqeXJCQlhrd0F0WFRwSEZ3SUI0TFlIeUVrRnd6L3Arck52Ck5JUFdZd0JQa2RXNEZHUVZNMm9BZ2h5S2VUajhOaENSVlJBeG1NTFdlVFdRZy9pUW1UamdKSmtsV3hwV3lkOXUKZ2FEYzQ4eHZjcDN1YUplL0FuMGlEUE5ZMUNwNnc0T3NMME9IL2N0RHpha0p4S1VFTTBLN0xhSnlld0M0Z2t0YQpheld2S2ZsMzR4UmdPVGVrQnB1MUVBS0x4VGFSaW1xRWdUMG9TT0RUNlFLQmdRRHFva0UvQU1PMGQxWEdta2ZIClVSdktQa244Z3Iwa2ZZWmJDMXc4aEo4UU12NEFleXUvbjl2SkE5WUVpMklGb01vT2l5SXdMazJKUk9GVm5nL2YKeHh3M1lFV1NXSHpQdlVlRXMvUlMxSjBxZGJ4ckEwTHd1a3lUaDdudUd3MVloczM3eWVSVHhMQnNKZUdRSWJuSgpSUVVGMDI5Z3ErcmovazJSWGZiVkJaME1iUUtCZ1FERWFaWHlPK2RZSTdtNXdIOEthTzhlaThhUU9YbDlCVFEvCllvRUorRGFTcVJvQ2gyZ1d0M01VRFJaczNOeVJUU2U3TVdpd2NPQnhCc1hyS2hTUGJXeE9tMTJtRGFsUk9VdnEKRFNFQVFFNTFGc2J5VXc5T3RHbWY1dDRublU3RktZS1R1TmZrc3dyaEk5cnhEN1JPczNuRExDTWh5R1JpNHZnSgpuMXFtTktnNEZ3S0JnUURTdWJTVmkrODRKakVnTkRHZy9lUlNpQXpVdnVwMldsSVBkSzE3SUxUbXpKVTVBMll3CkxMY3Myc2djdnIzalJod1NZYnpydnJvZVBZR083bTFkVWlxeVJVRldoU2hiUHFoN3MwOE1FUzJ5RTVtTUZwckoKTHRoVmE0RitLa2ViS1Q3WUV1T0FwRmE2V204eGpraVlUZWVMNnUvTng3a20ySjc3bm9Odm9DSURKUUtCZ1FDbwpaQW1kT3dSMWlYT0NzR2w2aUVweHVzNUsraXVSSnZRTFg2MVgyY2tYNWdpWm9ITjUvbCtZRWp4bXF0Z2picTJnCmpKUy9xSmFUOElXZ3Yxd1BOM1lDMHFyd1lZZ0hUZ01xcjRUYWpVZDJsVWVObSs1a3dNSkp5QW93bG1waEdOeU4KUDQxQTBzdUNDRlorRThPM01hSXoxVlJ0Y3p1MWwvZWxjRXlzY0RyRWt3S0JnQW1QWnFHdm9oZEwxUENISVZoawpJNE0wYTlCaXZUVnZ0SWFCemNwR0JsQituMHdCUFpNaGJyT1o5amlva2FzTVJUM1pxNXdUTU9lbHp6OFZ2d013Ck1uaVpMaXpCbmZ1aVVTRGZRY1dsNWlDRlpyT2hwbjJHR1BLazVxdWVHZG1LVVZmaDRQVnVsQlRBNTdpTnAzT0kKV0JQYnZJYUhpS21Cc0ZyaEU0UEpDeWZCCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
---
# Source: keel-helm/templates/shared.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: keel-shared
  namespace: keel-cn
data:

  wait.sh: |-
    if [[ ! -f /keel/update/wait ]]; then
      exit 0
    fi
    ordinal=${HOSTNAME##*-}
    waits=$(cat /keel/update/wait)
    for wait in $waits; do
      if [[ $wait -eq $ordinal ]]; then
        exit 1
      fi
    done
    exit 0
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: keel-rabbitmq-local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: keel-rabbitmq-pv
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  storageClassName: keel-rabbitmq-local-storage
  local:
    path: /data/keel/rabbitmq-os
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - k8s-node2
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: direct-sdk-0
  namespace: keel-cn
spec:
  source: direct_SDK
  destination: charge_SDK
  destinationType: queue
  routingKey: charge_SDK
  rabbitmqClusterReference:
    name: keel-rabbitmq-os
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: direct-sdk-1
  namespace: keel-cn
spec:
  source: direct_SDK
  destination: charge_SDK
  destinationType: queue
  routingKey: login_SDK
  rabbitmqClusterReference:
    name: keel-rabbitmq-os
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: direct-sdk-2
  namespace: keel-cn
spec:
  source: direct_SDK
  destination: checkreceipt_SDK
  destinationType: queue
  routingKey: checkreceipt_SDK
  rabbitmqClusterReference:
    name: keel-rabbitmq-os
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: direct-sdk-3
  namespace: keel-cn
spec:
  source: direct_SDK
  destination: login_SDK
  destinationType: queue
  rabbitmqClusterReference:
    name: keel-rabbitmq-os
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: direct-sdk-4
  namespace: keel-cn
spec:
  source: direct_SDK
  destination: login_SDK
  destinationType: queue
  routingKey: login
  rabbitmqClusterReference:
    name: keel-rabbitmq-os
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: direct-sdk-5
  namespace: keel-cn
spec:
  source: direct_SDK
  destination: login_SDK
  destinationType: queue
  routingKey: login_SDK
  rabbitmqClusterReference:
    name: keel-rabbitmq-os
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: direct-sdk-6
  namespace: keel-cn
spec:
  source: direct_SDK
  destination: login_sdk_to_rc
  destinationType: queue
  routingKey: login
  rabbitmqClusterReference:
    name: keel-rabbitmq-os
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: direct-sdk-7
  namespace: keel-cn
spec:
  source: direct_SDK
  destination: register_SDK
  destinationType: queue
  routingKey: register_SDK
  rabbitmqClusterReference:
    name: keel-rabbitmq-os
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: direct-sdk-8
  namespace: keel-cn
spec:
  source: direct_SDK
  destination: sendalertinfo_SDK
  destinationType: queue
  routingKey: sendalertinfo_SDK
  rabbitmqClusterReference:
    name: keel-rabbitmq-os
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: direct-sdk-9
  namespace: keel-cn
spec:
  source: direct_SDK
  destination: test_queue
  destinationType: queue
  routingKey: test
  rabbitmqClusterReference:
    name: keel-rabbitmq-os
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: direct-sdk-10
  namespace: keel-cn
spec:
  source: direct_SDK
  destination: voided_slave
  destinationType: queue
  routingKey: voided_slave
  rabbitmqClusterReference:
    name: keel-rabbitmq-os
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: qrcode-pay-fanout-sdk-0
  namespace: keel-cn
spec:
  source: qrcode_pay_fanout_SDK
  destination: qrcode_pay_SDK1
  destinationType: queue
  rabbitmqClusterReference:
    name: keel-rabbitmq-os
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: qrcode-pay-fanout-sdk-1
  namespace: keel-cn
spec:
  source: qrcode_pay_fanout_SDK
  destination: qrcode_pay_SDK2
  destinationType: queue
  rabbitmqClusterReference:
    name: keel-rabbitmq-os
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Exchange
metadata:
  name: direct-sdk
  namespace: keel-cn
spec:
  name: direct_SDK
  type: direct
  autoDelete: false
  durable: true
  rabbitmqClusterReference:
    name: keel-rabbitmq-os
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Exchange
metadata:
  name: qrcode-login-fanout-sdk
  namespace: keel-cn
spec:
  name: qrcode_login_fanout_SDK
  type: fanout
  autoDelete: false
  durable: true
  rabbitmqClusterReference:
    name: keel-rabbitmq-os
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Exchange
metadata:
  name: qrcode-pay-fanout-sdk
  namespace: keel-cn
spec:
  name: qrcode_pay_fanout_SDK
  type: fanout
  autoDelete: false
  durable: true
  rabbitmqClusterReference:
    name: keel-rabbitmq-os
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Permission
metadata:
  name: keel-rabbitmq-os-user-permission
  namespace: keel-cn
spec:
  vhost: "/"
  user: zulongrc
  permissions:
    write: ".*"
    configure: ".*"
    read: ".*"
  rabbitmqClusterReference:
    name: keel-rabbitmq-os
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Queue
metadata:
  name: login-sdk
  namespace: keel-cn
spec:
  name: login_SDK
  autoDelete: false
  durable: true
  rabbitmqClusterReference:
    name: keel-rabbitmq-os
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Queue
metadata:
  name: login-sdk-to-rc
  namespace: keel-cn
spec:
  name: login_sdk_to_rc
  autoDelete: false
  durable: true
  rabbitmqClusterReference:
    name: keel-rabbitmq-os
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Queue
metadata:
  name: charge-sdk
  namespace: keel-cn
spec:
  name: charge_SDK
  autoDelete: false
  durable: true
  rabbitmqClusterReference:
    name: keel-rabbitmq-os
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Queue
metadata:
  name: checkreceipt-sdk
  namespace: keel-cn
spec:
  name: checkreceipt_SDK
  autoDelete: false
  durable: true
  rabbitmqClusterReference:
    name: keel-rabbitmq-os
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Queue
metadata:
  name: sendalertinfo-sdk
  namespace: keel-cn
spec:
  name: sendalertinfo_SDK
  autoDelete: false
  durable: true
  rabbitmqClusterReference:
    name: keel-rabbitmq-os
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Queue
metadata:
  name: register-sdk
  namespace: keel-cn
spec:
  name: register_SDK
  autoDelete: false
  durable: true
  rabbitmqClusterReference:
    name: keel-rabbitmq-os
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Queue
metadata:
  name: qrcode-login-sdk
  namespace: keel-cn
spec:
  name: qrcode_login_SDK
  autoDelete: false
  durable: true
  rabbitmqClusterReference:
    name: keel-rabbitmq-os
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Queue
metadata:
  name: qrcode-pay-sdk
  namespace: keel-cn
spec:
  name: qrcode_pay_SDK
  autoDelete: false
  durable: true
  rabbitmqClusterReference:
    name: keel-rabbitmq-os
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Queue
metadata:
  name: qrcode-pay-sdk1
  namespace: keel-cn
spec:
  name: qrcode_pay_SDK1
  autoDelete: false
  durable: true
  rabbitmqClusterReference:
    name: keel-rabbitmq-os
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Queue
metadata:
  name: qrcode-pay-sdk2
  namespace: keel-cn
spec:
  name: qrcode_pay_SDK2
  autoDelete: false
  durable: true
  rabbitmqClusterReference:
    name: keel-rabbitmq-os
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Queue
metadata:
  name: test-queue
  namespace: keel-cn
spec:
  name: test_queue
  autoDelete: false
  durable: true
  rabbitmqClusterReference:
    name: keel-rabbitmq-os
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: Queue
metadata:
  name: voided-slave
  namespace: keel-cn
spec:
  name: voided_slave
  autoDelete: false
  durable: true
  rabbitmqClusterReference:
    name: keel-rabbitmq-os
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: RabbitmqCluster
metadata:
  name: keel-rabbitmq-os
  namespace: keel-cn
spec:
  image: harbor.zulong.com/common-images/rabbitmq:3.11
  imagePullSecrets:
      - name: zulong-key
  service:
    type: NodePort
  replicas: 1
  persistence:
    storageClassName: keel-rabbitmq-local-storage
    storage: 10Gi
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
  rabbitmq:
    additionalConfig:     |
      total_memory_available_override_value = 1600Mi
---
# Source: keel-helm/templates/rabbitmq.yaml
apiVersion: rabbitmq.com/v1beta1
kind: User
metadata:
  name: keel-rabbitmq-os-user
  namespace: keel-cn
spec:
  tags:
    - management
    - policymaker
    - monitoring
    - administrator
  rabbitmqClusterReference:
    name: keel-rabbitmq-os
  importCredentialsSecret:
    name: keel-rabbitmq-os-secret
